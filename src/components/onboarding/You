// src/components/onboarding/You
import React from 'react';
import { OnboardingData } from '@/pages/Onboarding'; // Au cas o√π vous auriez besoin de data ici

import OnboardingLayout from './OnboardingLayout';
import { Button } from '@/components/ui/button';

interface AppExperienceProps {
  onNext: () => void;
  onBack: () => void; // Uniquement si vous voulez un bouton retour sur cet √©cran
  data: OnboardingData; // Gard√© pour la coh√©rence, m√™me si non utilis√© directement pour les options
}

const experienceOptions = [
  { 
    id: 'health_scores', 
    label: 'Utiliser les scores de sant√© pour am√©liorer votre routine', 
    icon: 'üíî' // Utilisation d'un c≈ìur bris√© car l'image n'a pas d'ic√¥ne claire pour "Health Scores"
  },
  { 
    id: 'track_food', 
    label: 'Suivre vos repas', 
    icon: 'ü•ë' // Ic√¥ne avocat comme dans l'image
  },
  { 
    id: 'calorie_recommendation', 
    label: 'Suivre votre recommandation calorique journali√®re', 
    icon: '‚óè' // Cercle avec portion noire comme dans l'image (peut √™tre remplac√© par un SVG)
  },
  { 
    id: 'balance_macros', 
    label: '√âquilibrer vos glucides, prot√©ines, lipides', 
    icon: '‚ö°' // Ic√¥nes d'√©l√©ments chimiques/√©nergie comme dans l'image
  },
];

const AppExperience: React.FC<AppExperienceProps> = ({ onNext, onBack, data }) => {
  const pageTitle = "Comment atteindre vos objectifs :"; // Traduction
  // Pas de sous-titre dans l'image pour cet √©cran

  return (
    <OnboardingLayout
      title={pageTitle}
      subtitle="" // Pas de sous-titre visible dans l'image pour cet √©cran
      onNext={onNext}
      onBack={onBack}
      showProgress={false} // Pas de barre de progression visible dans l'image
      nextDisabled={false} // Le bouton est toujours actif car ce ne sont pas des s√©lections
    >
      <div className="flex-1 flex flex-col justify-center px-6 py-8">
        <div className="space-y-4 mb-12"> {/* Utilisation de space-y pour l'espacement vertical */}
          {experienceOptions.map((option) => (
            <div
              key={option.id}
              className={`w-full p-4 rounded-2xl border-2 transition-all duration-200 
                bg-prot-white border-gray-200 shadow-sm flex items-center space-x-4` // Style de carte non s√©lectionn√©e, car elles ne sont pas cliquables
              }
            >
              {/* Conteneur pour l'ic√¥ne */}
              <div className="w-12 h-12 flex items-center justify-center">
                {/* Ic√¥ne sp√©cifique pour chaque option */}
                {option.id === 'health_scores' && (
                    <span className="text-3xl text-prot-black">üíî</span> // C≈ìur bris√©
                )}
                {option.id === 'track_food' && (
                    <span className="text-3xl">ü•ë</span> {/* Avocat */}
                )}
                {option.id === 'calorie_recommendation' && (
                    <div className="relative w-8 h-8 rounded-full border-2 border-prot-black flex items-center justify-center overflow-hidden">
                        {/* Simule le cercle avec une portion noire */}
                        <div className="absolute top-0 left-0 w-full h-full bg-prot-black" style={{ clipPath: 'inset(0 0 50% 0)' }}></div>
                    </div>
                )}
                {option.id === 'balance_macros' && (
                    <div className="relative w-12 h-12 flex items-center justify-center">
                        {/* Simule les cercles li√©s avec des couleurs */}
                        <div className="absolute w-5 h-5 rounded-full bg-red-500 top-0 left-0 -translate-x-1 -translate-y-1"></div>
                        <div className="absolute w-5 h-5 rounded-full bg-blue-500 bottom-0 left-0 -translate-x-1 translate-y-1"></div>
                        <div className="absolute w-5 h-5 rounded-full bg-orange-500 top-0 right-0 translate-x-1 -translate-y-1"></div>
                        <div className="absolute w-px h-8 bg-gray-500 transform rotate-45"></div> {/* Lignes de liaison */}
                        <div className="absolute w-px h-8 bg-gray-500 transform -rotate-45"></div>
                    </div>
                )}
              </div>
              
              <div className="text-left flex-1">
                <div className="text-lg font-semibold text-prot-black">
                  {option.label}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      {/* Le bouton "Next" de l'OnboardingLayout aura le texte "Let's get started!" */}
      {/* Si vous voulez un texte sp√©cifique "C'est parti !", vous pouvez le passer en prop au OnboardingLayout
          ou le red√©finir ici comme sur le ThankYouScreen. */}
      <Button
          onClick={onNext}
          className="w-full h-14 bg-prot-orange hover:bg-prot-orange/90 text-prot-black font-semibold text-lg rounded-2xl transition-all duration-200 hover:scale-[1.02] shadow-lg"
      >
          C'est parti !
      </Button>
    </OnboardingLayout>
  );
};

export default AppExperience;
